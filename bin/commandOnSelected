#!/bin/bash

readonly scriptFilespec="${BASH_SOURCE[0]}"

printUsage()
{
    cat <<HELPTEXT
Read entries from stdin (one per line), show a (numbered) list of them to the
user, and ask for selections (or allow further filtering of the list). The
selected ones are then passed to the COMMAND [or printed].
HELPTEXT
printf 'Usage: ... | %q %s\n' "$(basename "$1")" '[COMMAND ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac


mapfile -t filespecs
exec 0</dev/tty

if [ ${#filespecs[@]} -eq 0 ]; then
    exit 0
elif [ ${#filespecs[@]} -eq 1 ]; then
    typeset -a selectedFilespecs=("${filespecs[@]}")
else
    typeset -a selectedFilespecs=()
    select filespec in "${filespecs[@]}"
    do
	if [ "$filespec" ]; then
	    selectedFilespecs+=("$filespec")
	elif [ "$REPLY" = '.' ]; then
	    break
	elif [ "$REPLY" = '?' ]; then
	    cat <<-'EOF'
		Enter each number (one after the other) to select the entry.
		Conclude by pressing Ctrl-D or entering "."
		Filter the list by entering "grep" arguments. (Double backslashes.)
EOF
	else
	    printf '%s\n' "${filespecs[@]}" | grep $REPLY | "$scriptFilespec" "$@"
	    exit $?
	fi
    done
fi

[ ${#selectedFilespecs[@]} -eq 0 ] && exit 1

[ $# -eq 0 ] && set -- printf '%s\n'
exec "$@" "${selectedFilespecs[@]}"
