#!/bin/bash
set -o pipefail

: ${COMMANDLINE_COMMAND_JOINER=;}
: ${COMMANDLINE_EXEC_END=;}

printUsage()
{
    cat <<HELPTEXT
Execute COMMAND(s).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "[-p|--piped|--and|--or] [-c|--command \"COMMANDLINE\" [...] | --exec SIMPLECOMMAND [...] ${COMMANDLINE_EXEC_END} [--exec ...] | [--] SIMPLECOMMAND [...]] [-?|-h|--help]"
}

commands=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--piped|-p)	shift; COMMANDLINE_COMMAND_JOINER='|';;
	--and)		shift; COMMANDLINE_COMMAND_JOINER='&&';;
	--or)		shift; COMMANDLINE_COMMAND_JOINER='||';;

	--command|-c)	shift; commands+="${commands:+ $COMMANDLINE_COMMAND_JOINER }$1"; shift;;
	--exec)		shift
			cmd=
			while [ $# -gt 0 -a "$1" != "$COMMANDLINE_EXEC_END" ]
			do
			    printf -v quotedArg '%q' "$1"
			    cmd+="${cmd:+ }${quotedArg}"
			    shift
			done
			if [ $# -eq 0 ]; then
			    echo "ERROR: --exec command must be concluded with '${COMMANDLINE_EXEC_END}'"; echo; printUsage "$0"
			    exit 2
			fi >&2
			shift
			commands+="${commands:+ $COMMANDLINE_COMMAND_JOINER }${cmd}"
			;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    # Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
    # undo the effects of eval.
    printf -v quotedSimpleCommand '%q ' "$@"
    commands+="${commands:+ $COMMANDLINE_COMMAND_JOINER }${quotedSimpleCommand% }"
fi

eval "$commands"
